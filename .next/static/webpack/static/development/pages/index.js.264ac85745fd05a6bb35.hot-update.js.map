{"version":3,"file":"static/webpack/static/development/pages/index.js.264ac85745fd05a6bb35.hot-update.js","sources":["webpack:///./pages/index.jsx"],"sourcesContent":["import { useState } from \"react\";\n\nconst App = () => {\n    const initialState = ['a','b','c']\n  //　作成したtodo を入れておくためのstate\n  const [todos, setTodos] = useState();\n\n  // フォームに入力された値をtodoに登録するまでに入れておくためのstate\n  const [tmpTodo, setTmpTodo] = useState(\"\");\n\n  const addTodo = () => {\n    // formの内容が空白の場合はalertを出す\n    if (tmpTodo === \"\") {\n      alert(\"文字を入力してください\");\n      return;\n    }\n    setTodos([...todos, tmpTodo]);\n    setTmpTodo(\"\");\n  };\n\n  // todoを削除する処理\n  const deleteTodo = index => {\n    const newTodos = todos.filter((todo, todoIndex) => {\n      console.log(\"todo\", todo);\n      console.log(\"todoIndex\", todoIndex);\n      return index !== todoIndex;\n    });\n    console.warn(newTodos);\n    setTodos(newTodos);\n      console.warn(newTodos);\n  };\n\n  return (\n    <>\n      <h1>TodoApp</h1>\n      <div className=\"form\">\n        Add Todo<input\n          type=\"text\"\n          name=\"todo\"\n          placeholder={'AddNewTodo'}\n          onChange={e => setTmpTodo(e.target.value)}\n          value={tmpTodo}\n        />\n        <button onClick={addTodo}>Add</button>\n      </div>\n      <ul>\n        {todos.map((todo, index) => {\n          return (\n            <li key={index}>\n              {todo}\n              <button onClick={() => deleteTodo(index)}>delete</button>\n            </li>\n          );\n        })}\n      </ul>\n      <style>\n        {`\n         h1 {\n          text-align: center;\n        }\n        .form {\n          display: flex;\n          justify-content: center;\n        }\n        ul {\n          width: 200px;\n          margin: 10px auto;\n        }\n        `}\n      </style>\n    </>\n  );\n};\n\nexport default App;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAFA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBA;AACA;AACA;;;;A","sourceRoot":""}